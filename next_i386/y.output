

Terminals which are not used:

   LITERAL_CHAR
   LITERAL_LONG
   LITERAL_FLOAT
   LITERAL_STRING



Grammar
rule 1    ExternalDeclarationList -> ExternalDeclaration
rule 2    ExternalDeclarationList -> ExternalDeclarationList ExternalDeclaration
rule 3    ExternalDeclaration -> ClassInterface
rule 4    ExternalDeclaration -> CategoryInterface
rule 5    ExternalDeclaration -> ProtocolDeclaration
rule 6    ExternalDeclaration -> ClassDeclarationList
rule 7    ClassInterface -> '@' INTERFACE_KW Identifier ':' Identifier ProtocolReferenceList.Opt InstanceVariables.Opt InterfaceDeclarationList.Opt '@' END_KW
rule 8    CategoryInterface -> '@' INTERFACE_KW Identifier '(' Identifier ')' ProtocolReferenceList.Opt InterfaceDeclarationList.Opt '@' END_KW
rule 9    ProtocolDeclaration -> '@' PROTOCOL_KW Identifier ProtocolReferenceList.Opt InterfaceDeclarationList.Opt '@' END_KW
rule 10   ProtocolReferenceList.Opt ->		/* empty */
rule 11   ProtocolReferenceList.Opt -> '<' IdentifierList '>'
rule 12   IdentifierList -> Identifier
rule 13   IdentifierList -> IdentifierList ',' Identifier
rule 14   InstanceVariables.Opt ->		/* empty */
rule 15   InstanceVariables.Opt -> InstanceVariables
rule 16   InstanceVariables -> '{' ProtectedStructDeclList '}'
rule 17   InstanceVariables -> '{' '}'
rule 18   ProtectedStructDeclList -> StructDeclarationList
rule 19   ProtectedStructDeclList -> ProtectedStructDecl
rule 20   ProtectedStructDeclList -> ProtectedStructDeclList ProtectedStructDecl
rule 21   ProtectedStructDecl -> '@' VisibilitySpec StructDeclarationList
rule 22   VisibilitySpec -> PRIVATE_KW
rule 23   VisibilitySpec -> PROTECTED_KW
rule 24   VisibilitySpec -> PUBLIC_KW
rule 25   InterfaceDeclarationList.Opt ->		/* empty */
rule 26   InterfaceDeclarationList.Opt -> InterfaceDeclarationList
rule 27   InterfaceDeclarationList -> InterfaceDeclaration
rule 28   InterfaceDeclarationList -> InterfaceDeclarationList InterfaceDeclaration
rule 29   InterfaceDeclaration -> Declaration
rule 30   InterfaceDeclaration -> MethodDeclaration
rule 31   MethodDeclaration -> ClassOrMethodSpec ObjcType.Opt MethodSelector ';'
rule 32   ClassOrMethodSpec -> '+'
rule 33   ClassOrMethodSpec -> '-'
rule 34   ObjcType.Opt ->		/* empty */
rule 35   ObjcType.Opt -> ObjcType
rule 36   ObjcType -> '(' TypeQualifier.Opt Type PointerDecl.Opt ')'
rule 37   MethodSelector -> Identifier
rule 38   MethodSelector -> KeywordSelectorList SpecialKeywordSelectors.Opt
rule 39   KeywordSelectorList -> KeywordDeclarator
rule 40   KeywordSelectorList -> KeywordSelectorList KeywordDeclarator
rule 41   KeywordDeclarator -> ':' ObjcType.Opt Identifier
rule 42   KeywordDeclarator -> Identifier ':' ObjcType.Opt Identifier
rule 43   SpecialKeywordSelectors.Opt ->		/* empty */
rule 44   SpecialKeywordSelectors.Opt -> ',' SpecialKeywordSelectors
rule 45   SpecialKeywordSelectors -> ELLIPSIS_KW
rule 46   SpecialKeywordSelectors -> ParamDeclList
rule 47   Identifier.Opt ->		/* empty */
rule 48   Identifier.Opt -> Identifier
rule 49   Identifier -> IDENTIFIER_KW
rule 50   StructDeclarationList -> StructDeclaration
rule 51   StructDeclarationList -> StructDeclarationList StructDeclaration
rule 52   StructDeclaration -> Type VarDeclarationList ';'
rule 53   VarDeclarationList -> VarDeclaration
rule 54   VarDeclarationList -> VarDeclarationList ',' VarDeclaration
rule 55   VarDeclaration -> PointerDecl.Opt Identifier VarDeclSuffix.Opt
rule 56   VarDeclSuffix.Opt ->		/* empty */
rule 57   VarDeclSuffix.Opt -> VarDeclSuffix
rule 58   VarDeclSuffix -> ArrayDeclList
rule 59   VarDeclSuffix -> ':' LITERAL_INT
rule 60   ClassDeclarationList -> '@' CLASS_KW IdentifierList ';'
rule 61   Type -> Identifier
rule 62   Type -> PrimaryType
rule 63   Type -> StructType
rule 64   Type -> FunctionalType
rule 65   StructType -> STRUCT_KW StructTypeComponent
rule 66   StructTypeComponent -> Identifier
rule 67   StructTypeComponent -> Identifier.Opt '{' StructDeclarationList '}'
rule 68   ArrayDeclList -> ArrayDecl
rule 69   ArrayDeclList -> ArrayDeclList ArrayDecl
rule 70   ArrayDecl -> '[' Size.Opt ']'
rule 71   Size.Opt ->		/* empty */
rule 72   Size.Opt -> LITERAL_INT
rule 73   PointerDecl.Opt ->		/* empty */
rule 74   PointerDecl.Opt -> PointerList
rule 75   PointerList -> TypeQualifier.Opt '*'
rule 76   PointerList -> PointerList TypeQualifier.Opt '*'
rule 77   TypeQualifier.Opt ->		/* empty */
rule 78   TypeQualifier.Opt -> TypeQualifier
rule 79   TypeQualifier -> CONST_KW
rule 80   TypeQualifier -> VOLATILE_KW
rule 81   TypeQualifier -> ProtocolQualifier
rule 82   ProtocolQualifier -> IN_KW
rule 83   ProtocolQualifier -> OUT_KW
rule 84   ProtocolQualifier -> INOUT_KW
rule 85   ProtocolQualifier -> BYCOPY_KW
rule 86   ProtocolQualifier -> ONEWAY_KW
rule 87   Declaration -> Type Identifier '(' ParamDeclList.Opt ')' ';'
rule 88   FunctionalType -> Type '(' PointerList ')' '(' ParamDeclList.Opt ')'
rule 89   ParamDeclList.Opt ->		/* empty */
rule 90   ParamDeclList.Opt -> ParamDeclList
rule 91   ParamDeclList -> ParamDecl
rule 92   ParamDeclList -> ParamDeclList ',' ParamDecl
rule 93   ParamDecl -> Type PointerDecl.Opt
rule 94   ParamDecl -> Type PointerDecl.Opt Identifier
rule 95   PrimaryType -> IntegerMathType
rule 96   PrimaryType -> NonIntegerMathType
rule 97   PrimaryType -> VOID_KW
rule 98   PrimaryType -> ID_KW
rule 99   IntegerMathType -> UNSIGNED_KW RawIntegerMathType
rule 100  IntegerMathType -> SIGNED_KW RawIntegerMathType
rule 101  IntegerMathType -> RawIntegerMathType
rule 102  IntegerMathType -> UNSIGNED_KW
rule 103  RawIntegerMathType -> CHAR_KW
rule 104  RawIntegerMathType -> SHORT_KW
rule 105  RawIntegerMathType -> INT_KW
rule 106  RawIntegerMathType -> LONG_KW
rule 107  NonIntegerMathType -> FLOAT_KW
rule 108  NonIntegerMathType -> DOUBLE_KW

Terminals, with rules where they appear

$ (-1)
'(' (40) 8 36 87 88
')' (41) 8 36 87 88
'*' (42) 75 76
'+' (43) 32
',' (44) 13 44 54 92
'-' (45) 33
':' (58) 7 41 42 59
';' (59) 31 52 60 87
'<' (60) 11
'>' (62) 11
'@' (64) 7 8 9 21 60
'[' (91) 70
']' (93) 70
'{' (123) 16 17 67
'}' (125) 16 17 67
error (256)
LITERAL_CHAR (258)
LITERAL_LONG (259)
LITERAL_INT (260) 59 72
LITERAL_FLOAT (261)
LITERAL_STRING (262)
IDENTIFIER_KW (263) 49
BYCOPY_KW (264) 85
CHAR_KW (265) 103
CLASS_KW (266) 60
CONST_KW (267) 79
DOUBLE_KW (268) 108
ELLIPSIS_KW (269) 45
END_KW (270) 7 8 9
FLOAT_KW (271) 107
ID_KW (272) 98
IN_KW (273) 82
INOUT_KW (274) 84
INT_KW (275) 105
INTERFACE_KW (276) 7 8
LONG_KW (277) 106
ONEWAY_KW (278) 86
OUT_KW (279) 83
PRIVATE_KW (280) 22
PROTOCOL_KW (281) 9
PROTECTED_KW (282) 23
PUBLIC_KW (283) 24
SHORT_KW (284) 104
SIGNED_KW (285) 100
STRUCT_KW (286) 65
UNSIGNED_KW (287) 99 102
VOID_KW (288) 97
VOLATILE_KW (289) 80

Nonterminals, with rules where they appear

ExternalDeclarationList (50)
    on left: 1 2, on right: 2
ExternalDeclaration (51)
    on left: 3 4 5 6, on right: 1 2
ClassInterface (52)
    on left: 7, on right: 3
CategoryInterface (53)
    on left: 8, on right: 4
ProtocolDeclaration (54)
    on left: 9, on right: 5
ProtocolReferenceList.Opt (55)
    on left: 10 11, on right: 7 8 9
IdentifierList (56)
    on left: 12 13, on right: 11 13 60
InstanceVariables.Opt (57)
    on left: 14 15, on right: 7
InstanceVariables (58)
    on left: 16 17, on right: 15
ProtectedStructDeclList (59)
    on left: 18 19 20, on right: 16 20
ProtectedStructDecl (60)
    on left: 21, on right: 19 20
VisibilitySpec (61)
    on left: 22 23 24, on right: 21
InterfaceDeclarationList.Opt (62)
    on left: 25 26, on right: 7 8 9
InterfaceDeclarationList (63)
    on left: 27 28, on right: 26 28
InterfaceDeclaration (64)
    on left: 29 30, on right: 27 28
MethodDeclaration (65)
    on left: 31, on right: 30
ClassOrMethodSpec (66)
    on left: 32 33, on right: 31
ObjcType.Opt (67)
    on left: 34 35, on right: 31 41 42
ObjcType (68)
    on left: 36, on right: 35
MethodSelector (69)
    on left: 37 38, on right: 31
KeywordSelectorList (70)
    on left: 39 40, on right: 38 40
KeywordDeclarator (71)
    on left: 41 42, on right: 39 40
SpecialKeywordSelectors.Opt (72)
    on left: 43 44, on right: 38
SpecialKeywordSelectors (73)
    on left: 45 46, on right: 44
Identifier.Opt (74)
    on left: 47 48, on right: 67
Identifier (75)
    on left: 49, on right: 7 8 9 12 13 37 41 42 48 55 61 66 87 94
StructDeclarationList (76)
    on left: 50 51, on right: 18 21 51 67
StructDeclaration (77)
    on left: 52, on right: 50 51
VarDeclarationList (78)
    on left: 53 54, on right: 52 54
VarDeclaration (79)
    on left: 55, on right: 53 54
VarDeclSuffix.Opt (80)
    on left: 56 57, on right: 55
VarDeclSuffix (81)
    on left: 58 59, on right: 57
ClassDeclarationList (82)
    on left: 60, on right: 6
Type (83)
    on left: 61 62 63 64, on right: 36 52 87 88 93 94
StructType (84)
    on left: 65, on right: 63
StructTypeComponent (85)
    on left: 66 67, on right: 65
ArrayDeclList (86)
    on left: 68 69, on right: 58 69
ArrayDecl (87)
    on left: 70, on right: 68 69
Size.Opt (88)
    on left: 71 72, on right: 70
PointerDecl.Opt (89)
    on left: 73 74, on right: 36 55 93 94
PointerList (90)
    on left: 75 76, on right: 74 76 88
TypeQualifier.Opt (91)
    on left: 77 78, on right: 36 75 76
TypeQualifier (92)
    on left: 79 80 81, on right: 78
ProtocolQualifier (93)
    on left: 82 83 84 85 86, on right: 81
Declaration (94)
    on left: 87, on right: 29
FunctionalType (95)
    on left: 88, on right: 64
ParamDeclList.Opt (96)
    on left: 89 90, on right: 87 88
ParamDeclList (97)
    on left: 91 92, on right: 46 90 92
ParamDecl (98)
    on left: 93 94, on right: 91 92
PrimaryType (99)
    on left: 95 96 97 98, on right: 62
IntegerMathType (100)
    on left: 99 100 101 102, on right: 95
RawIntegerMathType (101)
    on left: 103 104 105 106, on right: 99 100 101
NonIntegerMathType (102)
    on left: 107 108, on right: 96


state 0

    '@' 	shift, and go to state 1

    ExternalDeclarationList	go to state 2
    ExternalDeclaration	go to state 3
    ClassInterface	go to state 4
    CategoryInterface	go to state 5
    ProtocolDeclaration	go to state 6
    ClassDeclarationList	go to state 7



state 1

    ClassInterface  ->  '@' . INTERFACE_KW Identifier ':' Identifier ProtocolReferenceList.Opt InstanceVariables.Opt InterfaceDeclarationList.Opt '@' END_KW   (rule 7)
    CategoryInterface  ->  '@' . INTERFACE_KW Identifier '(' Identifier ')' ProtocolReferenceList.Opt InterfaceDeclarationList.Opt '@' END_KW   (rule 8)
    ProtocolDeclaration  ->  '@' . PROTOCOL_KW Identifier ProtocolReferenceList.Opt InterfaceDeclarationList.Opt '@' END_KW   (rule 9)
    ClassDeclarationList  ->  '@' . CLASS_KW IdentifierList ';'   (rule 60)

    CLASS_KW	shift, and go to state 8
    INTERFACE_KW	shift, and go to state 9
    PROTOCOL_KW	shift, and go to state 10



state 2

    ExternalDeclarationList  ->  ExternalDeclarationList . ExternalDeclaration   (rule 2)

    $   	go to state 168
    '@' 	shift, and go to state 1

    ExternalDeclaration	go to state 11
    ClassInterface	go to state 4
    CategoryInterface	go to state 5
    ProtocolDeclaration	go to state 6
    ClassDeclarationList	go to state 7



state 3

    ExternalDeclarationList  ->  ExternalDeclaration .   (rule 1)

    $default	reduce using rule 1 (ExternalDeclarationList)



state 4

    ExternalDeclaration  ->  ClassInterface .   (rule 3)

    $default	reduce using rule 3 (ExternalDeclaration)



state 5

    ExternalDeclaration  ->  CategoryInterface .   (rule 4)

    $default	reduce using rule 4 (ExternalDeclaration)



state 6

    ExternalDeclaration  ->  ProtocolDeclaration .   (rule 5)

    $default	reduce using rule 5 (ExternalDeclaration)



state 7

    ExternalDeclaration  ->  ClassDeclarationList .   (rule 6)

    $default	reduce using rule 6 (ExternalDeclaration)



state 8

    ClassDeclarationList  ->  '@' CLASS_KW . IdentifierList ';'   (rule 60)

    IDENTIFIER_KW	shift, and go to state 12

    IdentifierList	go to state 13
    Identifier	go to state 14



state 9

    ClassInterface  ->  '@' INTERFACE_KW . Identifier ':' Identifier ProtocolReferenceList.Opt InstanceVariables.Opt InterfaceDeclarationList.Opt '@' END_KW   (rule 7)
    CategoryInterface  ->  '@' INTERFACE_KW . Identifier '(' Identifier ')' ProtocolReferenceList.Opt InterfaceDeclarationList.Opt '@' END_KW   (rule 8)

    IDENTIFIER_KW	shift, and go to state 12

    Identifier	go to state 15



state 10

    ProtocolDeclaration  ->  '@' PROTOCOL_KW . Identifier ProtocolReferenceList.Opt InterfaceDeclarationList.Opt '@' END_KW   (rule 9)

    IDENTIFIER_KW	shift, and go to state 12

    Identifier	go to state 16



state 11

    ExternalDeclarationList  ->  ExternalDeclarationList ExternalDeclaration .   (rule 2)

    $default	reduce using rule 2 (ExternalDeclarationList)



state 12

    Identifier  ->  IDENTIFIER_KW .   (rule 49)

    $default	reduce using rule 49 (Identifier)



state 13

    IdentifierList  ->  IdentifierList . ',' Identifier   (rule 13)
    ClassDeclarationList  ->  '@' CLASS_KW IdentifierList . ';'   (rule 60)

    ';' 	shift, and go to state 17
    ',' 	shift, and go to state 18



state 14

    IdentifierList  ->  Identifier .   (rule 12)

    $default	reduce using rule 12 (IdentifierList)



state 15

    ClassInterface  ->  '@' INTERFACE_KW Identifier . ':' Identifier ProtocolReferenceList.Opt InstanceVariables.Opt InterfaceDeclarationList.Opt '@' END_KW   (rule 7)
    CategoryInterface  ->  '@' INTERFACE_KW Identifier . '(' Identifier ')' ProtocolReferenceList.Opt InterfaceDeclarationList.Opt '@' END_KW   (rule 8)

    ':' 	shift, and go to state 19
    '(' 	shift, and go to state 20



state 16

    ProtocolDeclaration  ->  '@' PROTOCOL_KW Identifier . ProtocolReferenceList.Opt InterfaceDeclarationList.Opt '@' END_KW   (rule 9)

    '<' 	shift, and go to state 21

    $default	reduce using rule 10 (ProtocolReferenceList.Opt)

    ProtocolReferenceList.Opt	go to state 22



state 17

    ClassDeclarationList  ->  '@' CLASS_KW IdentifierList ';' .   (rule 60)

    $default	reduce using rule 60 (ClassDeclarationList)



state 18

    IdentifierList  ->  IdentifierList ',' . Identifier   (rule 13)

    IDENTIFIER_KW	shift, and go to state 12

    Identifier	go to state 23



state 19

    ClassInterface  ->  '@' INTERFACE_KW Identifier ':' . Identifier ProtocolReferenceList.Opt InstanceVariables.Opt InterfaceDeclarationList.Opt '@' END_KW   (rule 7)

    IDENTIFIER_KW	shift, and go to state 12

    Identifier	go to state 24



state 20

    CategoryInterface  ->  '@' INTERFACE_KW Identifier '(' . Identifier ')' ProtocolReferenceList.Opt InterfaceDeclarationList.Opt '@' END_KW   (rule 8)

    IDENTIFIER_KW	shift, and go to state 12

    Identifier	go to state 25



state 21

    ProtocolReferenceList.Opt  ->  '<' . IdentifierList '>'   (rule 11)

    IDENTIFIER_KW	shift, and go to state 12

    IdentifierList	go to state 26
    Identifier	go to state 14



state 22

    ProtocolDeclaration  ->  '@' PROTOCOL_KW Identifier ProtocolReferenceList.Opt . InterfaceDeclarationList.Opt '@' END_KW   (rule 9)

    IDENTIFIER_KW	shift, and go to state 12
    CHAR_KW	shift, and go to state 27
    DOUBLE_KW	shift, and go to state 28
    FLOAT_KW	shift, and go to state 29
    ID_KW	shift, and go to state 30
    INT_KW	shift, and go to state 31
    LONG_KW	shift, and go to state 32
    SHORT_KW	shift, and go to state 33
    SIGNED_KW	shift, and go to state 34
    STRUCT_KW	shift, and go to state 35
    UNSIGNED_KW	shift, and go to state 36
    VOID_KW	shift, and go to state 37
    '+' 	shift, and go to state 38
    '-' 	shift, and go to state 39

    $default	reduce using rule 25 (InterfaceDeclarationList.Opt)

    InterfaceDeclarationList.Opt	go to state 40
    InterfaceDeclarationList	go to state 41
    InterfaceDeclaration	go to state 42
    MethodDeclaration	go to state 43
    ClassOrMethodSpec	go to state 44
    Identifier	go to state 45
    Type	go to state 46
    StructType	go to state 47
    Declaration	go to state 48
    FunctionalType	go to state 49
    PrimaryType	go to state 50
    IntegerMathType	go to state 51
    RawIntegerMathType	go to state 52
    NonIntegerMathType	go to state 53



state 23

    IdentifierList  ->  IdentifierList ',' Identifier .   (rule 13)

    $default	reduce using rule 13 (IdentifierList)



state 24

    ClassInterface  ->  '@' INTERFACE_KW Identifier ':' Identifier . ProtocolReferenceList.Opt InstanceVariables.Opt InterfaceDeclarationList.Opt '@' END_KW   (rule 7)

    '<' 	shift, and go to state 21

    $default	reduce using rule 10 (ProtocolReferenceList.Opt)

    ProtocolReferenceList.Opt	go to state 54



state 25

    CategoryInterface  ->  '@' INTERFACE_KW Identifier '(' Identifier . ')' ProtocolReferenceList.Opt InterfaceDeclarationList.Opt '@' END_KW   (rule 8)

    ')' 	shift, and go to state 55



state 26

    ProtocolReferenceList.Opt  ->  '<' IdentifierList . '>'   (rule 11)
    IdentifierList  ->  IdentifierList . ',' Identifier   (rule 13)

    '>' 	shift, and go to state 56
    ',' 	shift, and go to state 18



state 27

    RawIntegerMathType  ->  CHAR_KW .   (rule 103)

    $default	reduce using rule 103 (RawIntegerMathType)



state 28

    NonIntegerMathType  ->  DOUBLE_KW .   (rule 108)

    $default	reduce using rule 108 (NonIntegerMathType)



state 29

    NonIntegerMathType  ->  FLOAT_KW .   (rule 107)

    $default	reduce using rule 107 (NonIntegerMathType)



state 30

    PrimaryType  ->  ID_KW .   (rule 98)

    $default	reduce using rule 98 (PrimaryType)



state 31

    RawIntegerMathType  ->  INT_KW .   (rule 105)

    $default	reduce using rule 105 (RawIntegerMathType)



state 32

    RawIntegerMathType  ->  LONG_KW .   (rule 106)

    $default	reduce using rule 106 (RawIntegerMathType)



state 33

    RawIntegerMathType  ->  SHORT_KW .   (rule 104)

    $default	reduce using rule 104 (RawIntegerMathType)



state 34

    IntegerMathType  ->  SIGNED_KW . RawIntegerMathType   (rule 100)

    CHAR_KW	shift, and go to state 27
    INT_KW	shift, and go to state 31
    LONG_KW	shift, and go to state 32
    SHORT_KW	shift, and go to state 33

    RawIntegerMathType	go to state 57



state 35

    StructType  ->  STRUCT_KW . StructTypeComponent   (rule 65)

    IDENTIFIER_KW	shift, and go to state 12

    $default	reduce using rule 47 (Identifier.Opt)

    Identifier.Opt	go to state 58
    Identifier	go to state 59
    StructTypeComponent	go to state 60



state 36

    IntegerMathType  ->  UNSIGNED_KW . RawIntegerMathType   (rule 99)
    IntegerMathType  ->  UNSIGNED_KW .   (rule 102)

    CHAR_KW	shift, and go to state 27
    INT_KW	shift, and go to state 31
    LONG_KW	shift, and go to state 32
    SHORT_KW	shift, and go to state 33

    $default	reduce using rule 102 (IntegerMathType)

    RawIntegerMathType	go to state 61



state 37

    PrimaryType  ->  VOID_KW .   (rule 97)

    $default	reduce using rule 97 (PrimaryType)



state 38

    ClassOrMethodSpec  ->  '+' .   (rule 32)

    $default	reduce using rule 32 (ClassOrMethodSpec)



state 39

    ClassOrMethodSpec  ->  '-' .   (rule 33)

    $default	reduce using rule 33 (ClassOrMethodSpec)



state 40

    ProtocolDeclaration  ->  '@' PROTOCOL_KW Identifier ProtocolReferenceList.Opt InterfaceDeclarationList.Opt . '@' END_KW   (rule 9)

    '@' 	shift, and go to state 62



state 41

    InterfaceDeclarationList.Opt  ->  InterfaceDeclarationList .   (rule 26)
    InterfaceDeclarationList  ->  InterfaceDeclarationList . InterfaceDeclaration   (rule 28)

    IDENTIFIER_KW	shift, and go to state 12
    CHAR_KW	shift, and go to state 27
    DOUBLE_KW	shift, and go to state 28
    FLOAT_KW	shift, and go to state 29
    ID_KW	shift, and go to state 30
    INT_KW	shift, and go to state 31
    LONG_KW	shift, and go to state 32
    SHORT_KW	shift, and go to state 33
    SIGNED_KW	shift, and go to state 34
    STRUCT_KW	shift, and go to state 35
    UNSIGNED_KW	shift, and go to state 36
    VOID_KW	shift, and go to state 37
    '+' 	shift, and go to state 38
    '-' 	shift, and go to state 39

    $default	reduce using rule 26 (InterfaceDeclarationList.Opt)

    InterfaceDeclaration	go to state 63
    MethodDeclaration	go to state 43
    ClassOrMethodSpec	go to state 44
    Identifier	go to state 45
    Type	go to state 46
    StructType	go to state 47
    Declaration	go to state 48
    FunctionalType	go to state 49
    PrimaryType	go to state 50
    IntegerMathType	go to state 51
    RawIntegerMathType	go to state 52
    NonIntegerMathType	go to state 53



state 42

    InterfaceDeclarationList  ->  InterfaceDeclaration .   (rule 27)

    $default	reduce using rule 27 (InterfaceDeclarationList)



state 43

    InterfaceDeclaration  ->  MethodDeclaration .   (rule 30)

    $default	reduce using rule 30 (InterfaceDeclaration)



state 44

    MethodDeclaration  ->  ClassOrMethodSpec . ObjcType.Opt MethodSelector ';'   (rule 31)

    '(' 	shift, and go to state 64

    $default	reduce using rule 34 (ObjcType.Opt)

    ObjcType.Opt	go to state 65
    ObjcType	go to state 66



state 45

    Type  ->  Identifier .   (rule 61)

    $default	reduce using rule 61 (Type)



state 46

    Declaration  ->  Type . Identifier '(' ParamDeclList.Opt ')' ';'   (rule 87)
    FunctionalType  ->  Type . '(' PointerList ')' '(' ParamDeclList.Opt ')'   (rule 88)

    IDENTIFIER_KW	shift, and go to state 12
    '(' 	shift, and go to state 67

    Identifier	go to state 68



state 47

    Type  ->  StructType .   (rule 63)

    $default	reduce using rule 63 (Type)



state 48

    InterfaceDeclaration  ->  Declaration .   (rule 29)

    $default	reduce using rule 29 (InterfaceDeclaration)



state 49

    Type  ->  FunctionalType .   (rule 64)

    $default	reduce using rule 64 (Type)



state 50

    Type  ->  PrimaryType .   (rule 62)

    $default	reduce using rule 62 (Type)



state 51

    PrimaryType  ->  IntegerMathType .   (rule 95)

    $default	reduce using rule 95 (PrimaryType)



state 52

    IntegerMathType  ->  RawIntegerMathType .   (rule 101)

    $default	reduce using rule 101 (IntegerMathType)



state 53

    PrimaryType  ->  NonIntegerMathType .   (rule 96)

    $default	reduce using rule 96 (PrimaryType)



state 54

    ClassInterface  ->  '@' INTERFACE_KW Identifier ':' Identifier ProtocolReferenceList.Opt . InstanceVariables.Opt InterfaceDeclarationList.Opt '@' END_KW   (rule 7)

    '{' 	shift, and go to state 69

    $default	reduce using rule 14 (InstanceVariables.Opt)

    InstanceVariables.Opt	go to state 70
    InstanceVariables	go to state 71



state 55

    CategoryInterface  ->  '@' INTERFACE_KW Identifier '(' Identifier ')' . ProtocolReferenceList.Opt InterfaceDeclarationList.Opt '@' END_KW   (rule 8)

    '<' 	shift, and go to state 21

    $default	reduce using rule 10 (ProtocolReferenceList.Opt)

    ProtocolReferenceList.Opt	go to state 72



state 56

    ProtocolReferenceList.Opt  ->  '<' IdentifierList '>' .   (rule 11)

    $default	reduce using rule 11 (ProtocolReferenceList.Opt)



state 57

    IntegerMathType  ->  SIGNED_KW RawIntegerMathType .   (rule 100)

    $default	reduce using rule 100 (IntegerMathType)



state 58

    StructTypeComponent  ->  Identifier.Opt . '{' StructDeclarationList '}'   (rule 67)

    '{' 	shift, and go to state 73



state 59

    Identifier.Opt  ->  Identifier .   (rule 48)
    StructTypeComponent  ->  Identifier .   (rule 66)

    '{' 	reduce using rule 48 (Identifier.Opt)
    $default	reduce using rule 66 (StructTypeComponent)



state 60

    StructType  ->  STRUCT_KW StructTypeComponent .   (rule 65)

    $default	reduce using rule 65 (StructType)



state 61

    IntegerMathType  ->  UNSIGNED_KW RawIntegerMathType .   (rule 99)

    $default	reduce using rule 99 (IntegerMathType)



state 62

    ProtocolDeclaration  ->  '@' PROTOCOL_KW Identifier ProtocolReferenceList.Opt InterfaceDeclarationList.Opt '@' . END_KW   (rule 9)

    END_KW	shift, and go to state 74



state 63

    InterfaceDeclarationList  ->  InterfaceDeclarationList InterfaceDeclaration .   (rule 28)

    $default	reduce using rule 28 (InterfaceDeclarationList)



state 64

    ObjcType  ->  '(' . TypeQualifier.Opt Type PointerDecl.Opt ')'   (rule 36)

    BYCOPY_KW	shift, and go to state 75
    CONST_KW	shift, and go to state 76
    IN_KW	shift, and go to state 77
    INOUT_KW	shift, and go to state 78
    ONEWAY_KW	shift, and go to state 79
    OUT_KW	shift, and go to state 80
    VOLATILE_KW	shift, and go to state 81

    $default	reduce using rule 77 (TypeQualifier.Opt)

    TypeQualifier.Opt	go to state 82
    TypeQualifier	go to state 83
    ProtocolQualifier	go to state 84



state 65

    MethodDeclaration  ->  ClassOrMethodSpec ObjcType.Opt . MethodSelector ';'   (rule 31)

    IDENTIFIER_KW	shift, and go to state 12
    ':' 	shift, and go to state 85

    MethodSelector	go to state 86
    KeywordSelectorList	go to state 87
    KeywordDeclarator	go to state 88
    Identifier	go to state 89



state 66

    ObjcType.Opt  ->  ObjcType .   (rule 35)

    $default	reduce using rule 35 (ObjcType.Opt)



state 67

    FunctionalType  ->  Type '(' . PointerList ')' '(' ParamDeclList.Opt ')'   (rule 88)

    BYCOPY_KW	shift, and go to state 75
    CONST_KW	shift, and go to state 76
    IN_KW	shift, and go to state 77
    INOUT_KW	shift, and go to state 78
    ONEWAY_KW	shift, and go to state 79
    OUT_KW	shift, and go to state 80
    VOLATILE_KW	shift, and go to state 81

    $default	reduce using rule 77 (TypeQualifier.Opt)

    PointerList	go to state 90
    TypeQualifier.Opt	go to state 91
    TypeQualifier	go to state 83
    ProtocolQualifier	go to state 84



state 68

    Declaration  ->  Type Identifier . '(' ParamDeclList.Opt ')' ';'   (rule 87)

    '(' 	shift, and go to state 92



state 69

    InstanceVariables  ->  '{' . ProtectedStructDeclList '}'   (rule 16)
    InstanceVariables  ->  '{' . '}'   (rule 17)

    IDENTIFIER_KW	shift, and go to state 12
    CHAR_KW	shift, and go to state 27
    DOUBLE_KW	shift, and go to state 28
    FLOAT_KW	shift, and go to state 29
    ID_KW	shift, and go to state 30
    INT_KW	shift, and go to state 31
    LONG_KW	shift, and go to state 32
    SHORT_KW	shift, and go to state 33
    SIGNED_KW	shift, and go to state 34
    STRUCT_KW	shift, and go to state 35
    UNSIGNED_KW	shift, and go to state 36
    VOID_KW	shift, and go to state 37
    '@' 	shift, and go to state 93
    '}' 	shift, and go to state 94

    ProtectedStructDeclList	go to state 95
    ProtectedStructDecl	go to state 96
    Identifier	go to state 45
    StructDeclarationList	go to state 97
    StructDeclaration	go to state 98
    Type	go to state 99
    StructType	go to state 47
    FunctionalType	go to state 49
    PrimaryType	go to state 50
    IntegerMathType	go to state 51
    RawIntegerMathType	go to state 52
    NonIntegerMathType	go to state 53



state 70

    ClassInterface  ->  '@' INTERFACE_KW Identifier ':' Identifier ProtocolReferenceList.Opt InstanceVariables.Opt . InterfaceDeclarationList.Opt '@' END_KW   (rule 7)

    IDENTIFIER_KW	shift, and go to state 12
    CHAR_KW	shift, and go to state 27
    DOUBLE_KW	shift, and go to state 28
    FLOAT_KW	shift, and go to state 29
    ID_KW	shift, and go to state 30
    INT_KW	shift, and go to state 31
    LONG_KW	shift, and go to state 32
    SHORT_KW	shift, and go to state 33
    SIGNED_KW	shift, and go to state 34
    STRUCT_KW	shift, and go to state 35
    UNSIGNED_KW	shift, and go to state 36
    VOID_KW	shift, and go to state 37
    '+' 	shift, and go to state 38
    '-' 	shift, and go to state 39

    $default	reduce using rule 25 (InterfaceDeclarationList.Opt)

    InterfaceDeclarationList.Opt	go to state 100
    InterfaceDeclarationList	go to state 41
    InterfaceDeclaration	go to state 42
    MethodDeclaration	go to state 43
    ClassOrMethodSpec	go to state 44
    Identifier	go to state 45
    Type	go to state 46
    StructType	go to state 47
    Declaration	go to state 48
    FunctionalType	go to state 49
    PrimaryType	go to state 50
    IntegerMathType	go to state 51
    RawIntegerMathType	go to state 52
    NonIntegerMathType	go to state 53



state 71

    InstanceVariables.Opt  ->  InstanceVariables .   (rule 15)

    $default	reduce using rule 15 (InstanceVariables.Opt)



state 72

    CategoryInterface  ->  '@' INTERFACE_KW Identifier '(' Identifier ')' ProtocolReferenceList.Opt . InterfaceDeclarationList.Opt '@' END_KW   (rule 8)

    IDENTIFIER_KW	shift, and go to state 12
    CHAR_KW	shift, and go to state 27
    DOUBLE_KW	shift, and go to state 28
    FLOAT_KW	shift, and go to state 29
    ID_KW	shift, and go to state 30
    INT_KW	shift, and go to state 31
    LONG_KW	shift, and go to state 32
    SHORT_KW	shift, and go to state 33
    SIGNED_KW	shift, and go to state 34
    STRUCT_KW	shift, and go to state 35
    UNSIGNED_KW	shift, and go to state 36
    VOID_KW	shift, and go to state 37
    '+' 	shift, and go to state 38
    '-' 	shift, and go to state 39

    $default	reduce using rule 25 (InterfaceDeclarationList.Opt)

    InterfaceDeclarationList.Opt	go to state 101
    InterfaceDeclarationList	go to state 41
    InterfaceDeclaration	go to state 42
    MethodDeclaration	go to state 43
    ClassOrMethodSpec	go to state 44
    Identifier	go to state 45
    Type	go to state 46
    StructType	go to state 47
    Declaration	go to state 48
    FunctionalType	go to state 49
    PrimaryType	go to state 50
    IntegerMathType	go to state 51
    RawIntegerMathType	go to state 52
    NonIntegerMathType	go to state 53



state 73

    StructTypeComponent  ->  Identifier.Opt '{' . StructDeclarationList '}'   (rule 67)

    IDENTIFIER_KW	shift, and go to state 12
    CHAR_KW	shift, and go to state 27
    DOUBLE_KW	shift, and go to state 28
    FLOAT_KW	shift, and go to state 29
    ID_KW	shift, and go to state 30
    INT_KW	shift, and go to state 31
    LONG_KW	shift, and go to state 32
    SHORT_KW	shift, and go to state 33
    SIGNED_KW	shift, and go to state 34
    STRUCT_KW	shift, and go to state 35
    UNSIGNED_KW	shift, and go to state 36
    VOID_KW	shift, and go to state 37

    Identifier	go to state 45
    StructDeclarationList	go to state 102
    StructDeclaration	go to state 98
    Type	go to state 99
    StructType	go to state 47
    FunctionalType	go to state 49
    PrimaryType	go to state 50
    IntegerMathType	go to state 51
    RawIntegerMathType	go to state 52
    NonIntegerMathType	go to state 53



state 74

    ProtocolDeclaration  ->  '@' PROTOCOL_KW Identifier ProtocolReferenceList.Opt InterfaceDeclarationList.Opt '@' END_KW .   (rule 9)

    $default	reduce using rule 9 (ProtocolDeclaration)



state 75

    ProtocolQualifier  ->  BYCOPY_KW .   (rule 85)

    $default	reduce using rule 85 (ProtocolQualifier)



state 76

    TypeQualifier  ->  CONST_KW .   (rule 79)

    $default	reduce using rule 79 (TypeQualifier)



state 77

    ProtocolQualifier  ->  IN_KW .   (rule 82)

    $default	reduce using rule 82 (ProtocolQualifier)



state 78

    ProtocolQualifier  ->  INOUT_KW .   (rule 84)

    $default	reduce using rule 84 (ProtocolQualifier)



state 79

    ProtocolQualifier  ->  ONEWAY_KW .   (rule 86)

    $default	reduce using rule 86 (ProtocolQualifier)



state 80

    ProtocolQualifier  ->  OUT_KW .   (rule 83)

    $default	reduce using rule 83 (ProtocolQualifier)



state 81

    TypeQualifier  ->  VOLATILE_KW .   (rule 80)

    $default	reduce using rule 80 (TypeQualifier)



state 82

    ObjcType  ->  '(' TypeQualifier.Opt . Type PointerDecl.Opt ')'   (rule 36)

    IDENTIFIER_KW	shift, and go to state 12
    CHAR_KW	shift, and go to state 27
    DOUBLE_KW	shift, and go to state 28
    FLOAT_KW	shift, and go to state 29
    ID_KW	shift, and go to state 30
    INT_KW	shift, and go to state 31
    LONG_KW	shift, and go to state 32
    SHORT_KW	shift, and go to state 33
    SIGNED_KW	shift, and go to state 34
    STRUCT_KW	shift, and go to state 35
    UNSIGNED_KW	shift, and go to state 36
    VOID_KW	shift, and go to state 37

    Identifier	go to state 45
    Type	go to state 103
    StructType	go to state 47
    FunctionalType	go to state 49
    PrimaryType	go to state 50
    IntegerMathType	go to state 51
    RawIntegerMathType	go to state 52
    NonIntegerMathType	go to state 53



state 83

    TypeQualifier.Opt  ->  TypeQualifier .   (rule 78)

    $default	reduce using rule 78 (TypeQualifier.Opt)



state 84

    TypeQualifier  ->  ProtocolQualifier .   (rule 81)

    $default	reduce using rule 81 (TypeQualifier)



state 85

    KeywordDeclarator  ->  ':' . ObjcType.Opt Identifier   (rule 41)

    '(' 	shift, and go to state 64

    $default	reduce using rule 34 (ObjcType.Opt)

    ObjcType.Opt	go to state 104
    ObjcType	go to state 66



state 86

    MethodDeclaration  ->  ClassOrMethodSpec ObjcType.Opt MethodSelector . ';'   (rule 31)

    ';' 	shift, and go to state 105



state 87

    MethodSelector  ->  KeywordSelectorList . SpecialKeywordSelectors.Opt   (rule 38)
    KeywordSelectorList  ->  KeywordSelectorList . KeywordDeclarator   (rule 40)

    IDENTIFIER_KW	shift, and go to state 12
    ':' 	shift, and go to state 85
    ',' 	shift, and go to state 106

    $default	reduce using rule 43 (SpecialKeywordSelectors.Opt)

    KeywordDeclarator	go to state 107
    SpecialKeywordSelectors.Opt	go to state 108
    Identifier	go to state 109



state 88

    KeywordSelectorList  ->  KeywordDeclarator .   (rule 39)

    $default	reduce using rule 39 (KeywordSelectorList)



state 89

    MethodSelector  ->  Identifier .   (rule 37)
    KeywordDeclarator  ->  Identifier . ':' ObjcType.Opt Identifier   (rule 42)

    ':' 	shift, and go to state 110

    $default	reduce using rule 37 (MethodSelector)



state 90

    PointerList  ->  PointerList . TypeQualifier.Opt '*'   (rule 76)
    FunctionalType  ->  Type '(' PointerList . ')' '(' ParamDeclList.Opt ')'   (rule 88)

    BYCOPY_KW	shift, and go to state 75
    CONST_KW	shift, and go to state 76
    IN_KW	shift, and go to state 77
    INOUT_KW	shift, and go to state 78
    ONEWAY_KW	shift, and go to state 79
    OUT_KW	shift, and go to state 80
    VOLATILE_KW	shift, and go to state 81
    ')' 	shift, and go to state 111

    $default	reduce using rule 77 (TypeQualifier.Opt)

    TypeQualifier.Opt	go to state 112
    TypeQualifier	go to state 83
    ProtocolQualifier	go to state 84



state 91

    PointerList  ->  TypeQualifier.Opt . '*'   (rule 75)

    '*' 	shift, and go to state 113



state 92

    Declaration  ->  Type Identifier '(' . ParamDeclList.Opt ')' ';'   (rule 87)

    IDENTIFIER_KW	shift, and go to state 12
    CHAR_KW	shift, and go to state 27
    DOUBLE_KW	shift, and go to state 28
    FLOAT_KW	shift, and go to state 29
    ID_KW	shift, and go to state 30
    INT_KW	shift, and go to state 31
    LONG_KW	shift, and go to state 32
    SHORT_KW	shift, and go to state 33
    SIGNED_KW	shift, and go to state 34
    STRUCT_KW	shift, and go to state 35
    UNSIGNED_KW	shift, and go to state 36
    VOID_KW	shift, and go to state 37

    $default	reduce using rule 89 (ParamDeclList.Opt)

    Identifier	go to state 45
    Type	go to state 114
    StructType	go to state 47
    FunctionalType	go to state 49
    ParamDeclList.Opt	go to state 115
    ParamDeclList	go to state 116
    ParamDecl	go to state 117
    PrimaryType	go to state 50
    IntegerMathType	go to state 51
    RawIntegerMathType	go to state 52
    NonIntegerMathType	go to state 53



state 93

    ProtectedStructDecl  ->  '@' . VisibilitySpec StructDeclarationList   (rule 21)

    PRIVATE_KW	shift, and go to state 118
    PROTECTED_KW	shift, and go to state 119
    PUBLIC_KW	shift, and go to state 120

    VisibilitySpec	go to state 121



state 94

    InstanceVariables  ->  '{' '}' .   (rule 17)

    $default	reduce using rule 17 (InstanceVariables)



state 95

    InstanceVariables  ->  '{' ProtectedStructDeclList . '}'   (rule 16)
    ProtectedStructDeclList  ->  ProtectedStructDeclList . ProtectedStructDecl   (rule 20)

    '@' 	shift, and go to state 93
    '}' 	shift, and go to state 122

    ProtectedStructDecl	go to state 123



state 96

    ProtectedStructDeclList  ->  ProtectedStructDecl .   (rule 19)

    $default	reduce using rule 19 (ProtectedStructDeclList)



state 97

    ProtectedStructDeclList  ->  StructDeclarationList .   (rule 18)
    StructDeclarationList  ->  StructDeclarationList . StructDeclaration   (rule 51)

    IDENTIFIER_KW	shift, and go to state 12
    CHAR_KW	shift, and go to state 27
    DOUBLE_KW	shift, and go to state 28
    FLOAT_KW	shift, and go to state 29
    ID_KW	shift, and go to state 30
    INT_KW	shift, and go to state 31
    LONG_KW	shift, and go to state 32
    SHORT_KW	shift, and go to state 33
    SIGNED_KW	shift, and go to state 34
    STRUCT_KW	shift, and go to state 35
    UNSIGNED_KW	shift, and go to state 36
    VOID_KW	shift, and go to state 37

    $default	reduce using rule 18 (ProtectedStructDeclList)

    Identifier	go to state 45
    StructDeclaration	go to state 124
    Type	go to state 99
    StructType	go to state 47
    FunctionalType	go to state 49
    PrimaryType	go to state 50
    IntegerMathType	go to state 51
    RawIntegerMathType	go to state 52
    NonIntegerMathType	go to state 53



state 98

    StructDeclarationList  ->  StructDeclaration .   (rule 50)

    $default	reduce using rule 50 (StructDeclarationList)



state 99

    StructDeclaration  ->  Type . VarDeclarationList ';'   (rule 52)
    FunctionalType  ->  Type . '(' PointerList ')' '(' ParamDeclList.Opt ')'   (rule 88)

    BYCOPY_KW	shift, and go to state 75
    CONST_KW	shift, and go to state 76
    IN_KW	shift, and go to state 77
    INOUT_KW	shift, and go to state 78
    ONEWAY_KW	shift, and go to state 79
    OUT_KW	shift, and go to state 80
    VOLATILE_KW	shift, and go to state 81
    '(' 	shift, and go to state 67

    '*' 	reduce using rule 77 (TypeQualifier.Opt)
    $default	reduce using rule 73 (PointerDecl.Opt)

    VarDeclarationList	go to state 125
    VarDeclaration	go to state 126
    PointerDecl.Opt	go to state 127
    PointerList	go to state 128
    TypeQualifier.Opt	go to state 91
    TypeQualifier	go to state 83
    ProtocolQualifier	go to state 84



state 100

    ClassInterface  ->  '@' INTERFACE_KW Identifier ':' Identifier ProtocolReferenceList.Opt InstanceVariables.Opt InterfaceDeclarationList.Opt . '@' END_KW   (rule 7)

    '@' 	shift, and go to state 129



state 101

    CategoryInterface  ->  '@' INTERFACE_KW Identifier '(' Identifier ')' ProtocolReferenceList.Opt InterfaceDeclarationList.Opt . '@' END_KW   (rule 8)

    '@' 	shift, and go to state 130



state 102

    StructDeclarationList  ->  StructDeclarationList . StructDeclaration   (rule 51)
    StructTypeComponent  ->  Identifier.Opt '{' StructDeclarationList . '}'   (rule 67)

    IDENTIFIER_KW	shift, and go to state 12
    CHAR_KW	shift, and go to state 27
    DOUBLE_KW	shift, and go to state 28
    FLOAT_KW	shift, and go to state 29
    ID_KW	shift, and go to state 30
    INT_KW	shift, and go to state 31
    LONG_KW	shift, and go to state 32
    SHORT_KW	shift, and go to state 33
    SIGNED_KW	shift, and go to state 34
    STRUCT_KW	shift, and go to state 35
    UNSIGNED_KW	shift, and go to state 36
    VOID_KW	shift, and go to state 37
    '}' 	shift, and go to state 131

    Identifier	go to state 45
    StructDeclaration	go to state 124
    Type	go to state 99
    StructType	go to state 47
    FunctionalType	go to state 49
    PrimaryType	go to state 50
    IntegerMathType	go to state 51
    RawIntegerMathType	go to state 52
    NonIntegerMathType	go to state 53



state 103

    ObjcType  ->  '(' TypeQualifier.Opt Type . PointerDecl.Opt ')'   (rule 36)
    FunctionalType  ->  Type . '(' PointerList ')' '(' ParamDeclList.Opt ')'   (rule 88)

    BYCOPY_KW	shift, and go to state 75
    CONST_KW	shift, and go to state 76
    IN_KW	shift, and go to state 77
    INOUT_KW	shift, and go to state 78
    ONEWAY_KW	shift, and go to state 79
    OUT_KW	shift, and go to state 80
    VOLATILE_KW	shift, and go to state 81
    '(' 	shift, and go to state 67

    '*' 	reduce using rule 77 (TypeQualifier.Opt)
    $default	reduce using rule 73 (PointerDecl.Opt)

    PointerDecl.Opt	go to state 132
    PointerList	go to state 128
    TypeQualifier.Opt	go to state 91
    TypeQualifier	go to state 83
    ProtocolQualifier	go to state 84



state 104

    KeywordDeclarator  ->  ':' ObjcType.Opt . Identifier   (rule 41)

    IDENTIFIER_KW	shift, and go to state 12

    Identifier	go to state 133



state 105

    MethodDeclaration  ->  ClassOrMethodSpec ObjcType.Opt MethodSelector ';' .   (rule 31)

    $default	reduce using rule 31 (MethodDeclaration)



state 106

    SpecialKeywordSelectors.Opt  ->  ',' . SpecialKeywordSelectors   (rule 44)

    IDENTIFIER_KW	shift, and go to state 12
    CHAR_KW	shift, and go to state 27
    DOUBLE_KW	shift, and go to state 28
    ELLIPSIS_KW	shift, and go to state 134
    FLOAT_KW	shift, and go to state 29
    ID_KW	shift, and go to state 30
    INT_KW	shift, and go to state 31
    LONG_KW	shift, and go to state 32
    SHORT_KW	shift, and go to state 33
    SIGNED_KW	shift, and go to state 34
    STRUCT_KW	shift, and go to state 35
    UNSIGNED_KW	shift, and go to state 36
    VOID_KW	shift, and go to state 37

    SpecialKeywordSelectors	go to state 135
    Identifier	go to state 45
    Type	go to state 114
    StructType	go to state 47
    FunctionalType	go to state 49
    ParamDeclList	go to state 136
    ParamDecl	go to state 117
    PrimaryType	go to state 50
    IntegerMathType	go to state 51
    RawIntegerMathType	go to state 52
    NonIntegerMathType	go to state 53



state 107

    KeywordSelectorList  ->  KeywordSelectorList KeywordDeclarator .   (rule 40)

    $default	reduce using rule 40 (KeywordSelectorList)



state 108

    MethodSelector  ->  KeywordSelectorList SpecialKeywordSelectors.Opt .   (rule 38)

    $default	reduce using rule 38 (MethodSelector)



state 109

    KeywordDeclarator  ->  Identifier . ':' ObjcType.Opt Identifier   (rule 42)

    ':' 	shift, and go to state 110



state 110

    KeywordDeclarator  ->  Identifier ':' . ObjcType.Opt Identifier   (rule 42)

    '(' 	shift, and go to state 64

    $default	reduce using rule 34 (ObjcType.Opt)

    ObjcType.Opt	go to state 137
    ObjcType	go to state 66



state 111

    FunctionalType  ->  Type '(' PointerList ')' . '(' ParamDeclList.Opt ')'   (rule 88)

    '(' 	shift, and go to state 138



state 112

    PointerList  ->  PointerList TypeQualifier.Opt . '*'   (rule 76)

    '*' 	shift, and go to state 139



state 113

    PointerList  ->  TypeQualifier.Opt '*' .   (rule 75)

    $default	reduce using rule 75 (PointerList)



state 114

    FunctionalType  ->  Type . '(' PointerList ')' '(' ParamDeclList.Opt ')'   (rule 88)
    ParamDecl  ->  Type . PointerDecl.Opt   (rule 93)
    ParamDecl  ->  Type . PointerDecl.Opt Identifier   (rule 94)

    BYCOPY_KW	shift, and go to state 75
    CONST_KW	shift, and go to state 76
    IN_KW	shift, and go to state 77
    INOUT_KW	shift, and go to state 78
    ONEWAY_KW	shift, and go to state 79
    OUT_KW	shift, and go to state 80
    VOLATILE_KW	shift, and go to state 81
    '(' 	shift, and go to state 67

    '*' 	reduce using rule 77 (TypeQualifier.Opt)
    $default	reduce using rule 73 (PointerDecl.Opt)

    PointerDecl.Opt	go to state 140
    PointerList	go to state 128
    TypeQualifier.Opt	go to state 91
    TypeQualifier	go to state 83
    ProtocolQualifier	go to state 84



state 115

    Declaration  ->  Type Identifier '(' ParamDeclList.Opt . ')' ';'   (rule 87)

    ')' 	shift, and go to state 141



state 116

    ParamDeclList.Opt  ->  ParamDeclList .   (rule 90)
    ParamDeclList  ->  ParamDeclList . ',' ParamDecl   (rule 92)

    ',' 	shift, and go to state 142

    $default	reduce using rule 90 (ParamDeclList.Opt)



state 117

    ParamDeclList  ->  ParamDecl .   (rule 91)

    $default	reduce using rule 91 (ParamDeclList)



state 118

    VisibilitySpec  ->  PRIVATE_KW .   (rule 22)

    $default	reduce using rule 22 (VisibilitySpec)



state 119

    VisibilitySpec  ->  PROTECTED_KW .   (rule 23)

    $default	reduce using rule 23 (VisibilitySpec)



state 120

    VisibilitySpec  ->  PUBLIC_KW .   (rule 24)

    $default	reduce using rule 24 (VisibilitySpec)



state 121

    ProtectedStructDecl  ->  '@' VisibilitySpec . StructDeclarationList   (rule 21)

    IDENTIFIER_KW	shift, and go to state 12
    CHAR_KW	shift, and go to state 27
    DOUBLE_KW	shift, and go to state 28
    FLOAT_KW	shift, and go to state 29
    ID_KW	shift, and go to state 30
    INT_KW	shift, and go to state 31
    LONG_KW	shift, and go to state 32
    SHORT_KW	shift, and go to state 33
    SIGNED_KW	shift, and go to state 34
    STRUCT_KW	shift, and go to state 35
    UNSIGNED_KW	shift, and go to state 36
    VOID_KW	shift, and go to state 37

    Identifier	go to state 45
    StructDeclarationList	go to state 143
    StructDeclaration	go to state 98
    Type	go to state 99
    StructType	go to state 47
    FunctionalType	go to state 49
    PrimaryType	go to state 50
    IntegerMathType	go to state 51
    RawIntegerMathType	go to state 52
    NonIntegerMathType	go to state 53



state 122

    InstanceVariables  ->  '{' ProtectedStructDeclList '}' .   (rule 16)

    $default	reduce using rule 16 (InstanceVariables)



state 123

    ProtectedStructDeclList  ->  ProtectedStructDeclList ProtectedStructDecl .   (rule 20)

    $default	reduce using rule 20 (ProtectedStructDeclList)



state 124

    StructDeclarationList  ->  StructDeclarationList StructDeclaration .   (rule 51)

    $default	reduce using rule 51 (StructDeclarationList)



state 125

    StructDeclaration  ->  Type VarDeclarationList . ';'   (rule 52)
    VarDeclarationList  ->  VarDeclarationList . ',' VarDeclaration   (rule 54)

    ';' 	shift, and go to state 144
    ',' 	shift, and go to state 145



state 126

    VarDeclarationList  ->  VarDeclaration .   (rule 53)

    $default	reduce using rule 53 (VarDeclarationList)



state 127

    VarDeclaration  ->  PointerDecl.Opt . Identifier VarDeclSuffix.Opt   (rule 55)

    IDENTIFIER_KW	shift, and go to state 12

    Identifier	go to state 146



state 128

    PointerDecl.Opt  ->  PointerList .   (rule 74)
    PointerList  ->  PointerList . TypeQualifier.Opt '*'   (rule 76)

    BYCOPY_KW	shift, and go to state 75
    CONST_KW	shift, and go to state 76
    IN_KW	shift, and go to state 77
    INOUT_KW	shift, and go to state 78
    ONEWAY_KW	shift, and go to state 79
    OUT_KW	shift, and go to state 80
    VOLATILE_KW	shift, and go to state 81

    '*' 	reduce using rule 77 (TypeQualifier.Opt)
    $default	reduce using rule 74 (PointerDecl.Opt)

    TypeQualifier.Opt	go to state 112
    TypeQualifier	go to state 83
    ProtocolQualifier	go to state 84



state 129

    ClassInterface  ->  '@' INTERFACE_KW Identifier ':' Identifier ProtocolReferenceList.Opt InstanceVariables.Opt InterfaceDeclarationList.Opt '@' . END_KW   (rule 7)

    END_KW	shift, and go to state 147



state 130

    CategoryInterface  ->  '@' INTERFACE_KW Identifier '(' Identifier ')' ProtocolReferenceList.Opt InterfaceDeclarationList.Opt '@' . END_KW   (rule 8)

    END_KW	shift, and go to state 148



state 131

    StructTypeComponent  ->  Identifier.Opt '{' StructDeclarationList '}' .   (rule 67)

    $default	reduce using rule 67 (StructTypeComponent)



state 132

    ObjcType  ->  '(' TypeQualifier.Opt Type PointerDecl.Opt . ')'   (rule 36)

    ')' 	shift, and go to state 149



state 133

    KeywordDeclarator  ->  ':' ObjcType.Opt Identifier .   (rule 41)

    $default	reduce using rule 41 (KeywordDeclarator)



state 134

    SpecialKeywordSelectors  ->  ELLIPSIS_KW .   (rule 45)

    $default	reduce using rule 45 (SpecialKeywordSelectors)



state 135

    SpecialKeywordSelectors.Opt  ->  ',' SpecialKeywordSelectors .   (rule 44)

    $default	reduce using rule 44 (SpecialKeywordSelectors.Opt)



state 136

    SpecialKeywordSelectors  ->  ParamDeclList .   (rule 46)
    ParamDeclList  ->  ParamDeclList . ',' ParamDecl   (rule 92)

    ',' 	shift, and go to state 142

    $default	reduce using rule 46 (SpecialKeywordSelectors)



state 137

    KeywordDeclarator  ->  Identifier ':' ObjcType.Opt . Identifier   (rule 42)

    IDENTIFIER_KW	shift, and go to state 12

    Identifier	go to state 150



state 138

    FunctionalType  ->  Type '(' PointerList ')' '(' . ParamDeclList.Opt ')'   (rule 88)

    IDENTIFIER_KW	shift, and go to state 12
    CHAR_KW	shift, and go to state 27
    DOUBLE_KW	shift, and go to state 28
    FLOAT_KW	shift, and go to state 29
    ID_KW	shift, and go to state 30
    INT_KW	shift, and go to state 31
    LONG_KW	shift, and go to state 32
    SHORT_KW	shift, and go to state 33
    SIGNED_KW	shift, and go to state 34
    STRUCT_KW	shift, and go to state 35
    UNSIGNED_KW	shift, and go to state 36
    VOID_KW	shift, and go to state 37

    $default	reduce using rule 89 (ParamDeclList.Opt)

    Identifier	go to state 45
    Type	go to state 114
    StructType	go to state 47
    FunctionalType	go to state 49
    ParamDeclList.Opt	go to state 151
    ParamDeclList	go to state 116
    ParamDecl	go to state 117
    PrimaryType	go to state 50
    IntegerMathType	go to state 51
    RawIntegerMathType	go to state 52
    NonIntegerMathType	go to state 53



state 139

    PointerList  ->  PointerList TypeQualifier.Opt '*' .   (rule 76)

    $default	reduce using rule 76 (PointerList)



state 140

    ParamDecl  ->  Type PointerDecl.Opt .   (rule 93)
    ParamDecl  ->  Type PointerDecl.Opt . Identifier   (rule 94)

    IDENTIFIER_KW	shift, and go to state 12

    $default	reduce using rule 93 (ParamDecl)

    Identifier	go to state 152



state 141

    Declaration  ->  Type Identifier '(' ParamDeclList.Opt ')' . ';'   (rule 87)

    ';' 	shift, and go to state 153



state 142

    ParamDeclList  ->  ParamDeclList ',' . ParamDecl   (rule 92)

    IDENTIFIER_KW	shift, and go to state 12
    CHAR_KW	shift, and go to state 27
    DOUBLE_KW	shift, and go to state 28
    FLOAT_KW	shift, and go to state 29
    ID_KW	shift, and go to state 30
    INT_KW	shift, and go to state 31
    LONG_KW	shift, and go to state 32
    SHORT_KW	shift, and go to state 33
    SIGNED_KW	shift, and go to state 34
    STRUCT_KW	shift, and go to state 35
    UNSIGNED_KW	shift, and go to state 36
    VOID_KW	shift, and go to state 37

    Identifier	go to state 45
    Type	go to state 114
    StructType	go to state 47
    FunctionalType	go to state 49
    ParamDecl	go to state 154
    PrimaryType	go to state 50
    IntegerMathType	go to state 51
    RawIntegerMathType	go to state 52
    NonIntegerMathType	go to state 53



state 143

    ProtectedStructDecl  ->  '@' VisibilitySpec StructDeclarationList .   (rule 21)
    StructDeclarationList  ->  StructDeclarationList . StructDeclaration   (rule 51)

    IDENTIFIER_KW	shift, and go to state 12
    CHAR_KW	shift, and go to state 27
    DOUBLE_KW	shift, and go to state 28
    FLOAT_KW	shift, and go to state 29
    ID_KW	shift, and go to state 30
    INT_KW	shift, and go to state 31
    LONG_KW	shift, and go to state 32
    SHORT_KW	shift, and go to state 33
    SIGNED_KW	shift, and go to state 34
    STRUCT_KW	shift, and go to state 35
    UNSIGNED_KW	shift, and go to state 36
    VOID_KW	shift, and go to state 37

    $default	reduce using rule 21 (ProtectedStructDecl)

    Identifier	go to state 45
    StructDeclaration	go to state 124
    Type	go to state 99
    StructType	go to state 47
    FunctionalType	go to state 49
    PrimaryType	go to state 50
    IntegerMathType	go to state 51
    RawIntegerMathType	go to state 52
    NonIntegerMathType	go to state 53



state 144

    StructDeclaration  ->  Type VarDeclarationList ';' .   (rule 52)

    $default	reduce using rule 52 (StructDeclaration)



state 145

    VarDeclarationList  ->  VarDeclarationList ',' . VarDeclaration   (rule 54)

    BYCOPY_KW	shift, and go to state 75
    CONST_KW	shift, and go to state 76
    IN_KW	shift, and go to state 77
    INOUT_KW	shift, and go to state 78
    ONEWAY_KW	shift, and go to state 79
    OUT_KW	shift, and go to state 80
    VOLATILE_KW	shift, and go to state 81

    '*' 	reduce using rule 77 (TypeQualifier.Opt)
    $default	reduce using rule 73 (PointerDecl.Opt)

    VarDeclaration	go to state 155
    PointerDecl.Opt	go to state 127
    PointerList	go to state 128
    TypeQualifier.Opt	go to state 91
    TypeQualifier	go to state 83
    ProtocolQualifier	go to state 84



state 146

    VarDeclaration  ->  PointerDecl.Opt Identifier . VarDeclSuffix.Opt   (rule 55)

    ':' 	shift, and go to state 156
    '[' 	shift, and go to state 157

    $default	reduce using rule 56 (VarDeclSuffix.Opt)

    VarDeclSuffix.Opt	go to state 158
    VarDeclSuffix	go to state 159
    ArrayDeclList	go to state 160
    ArrayDecl	go to state 161



state 147

    ClassInterface  ->  '@' INTERFACE_KW Identifier ':' Identifier ProtocolReferenceList.Opt InstanceVariables.Opt InterfaceDeclarationList.Opt '@' END_KW .   (rule 7)

    $default	reduce using rule 7 (ClassInterface)



state 148

    CategoryInterface  ->  '@' INTERFACE_KW Identifier '(' Identifier ')' ProtocolReferenceList.Opt InterfaceDeclarationList.Opt '@' END_KW .   (rule 8)

    $default	reduce using rule 8 (CategoryInterface)



state 149

    ObjcType  ->  '(' TypeQualifier.Opt Type PointerDecl.Opt ')' .   (rule 36)

    $default	reduce using rule 36 (ObjcType)



state 150

    KeywordDeclarator  ->  Identifier ':' ObjcType.Opt Identifier .   (rule 42)

    $default	reduce using rule 42 (KeywordDeclarator)



state 151

    FunctionalType  ->  Type '(' PointerList ')' '(' ParamDeclList.Opt . ')'   (rule 88)

    ')' 	shift, and go to state 162



state 152

    ParamDecl  ->  Type PointerDecl.Opt Identifier .   (rule 94)

    $default	reduce using rule 94 (ParamDecl)



state 153

    Declaration  ->  Type Identifier '(' ParamDeclList.Opt ')' ';' .   (rule 87)

    $default	reduce using rule 87 (Declaration)



state 154

    ParamDeclList  ->  ParamDeclList ',' ParamDecl .   (rule 92)

    $default	reduce using rule 92 (ParamDeclList)



state 155

    VarDeclarationList  ->  VarDeclarationList ',' VarDeclaration .   (rule 54)

    $default	reduce using rule 54 (VarDeclarationList)



state 156

    VarDeclSuffix  ->  ':' . LITERAL_INT   (rule 59)

    LITERAL_INT	shift, and go to state 163



state 157

    ArrayDecl  ->  '[' . Size.Opt ']'   (rule 70)

    LITERAL_INT	shift, and go to state 164

    $default	reduce using rule 71 (Size.Opt)

    Size.Opt	go to state 165



state 158

    VarDeclaration  ->  PointerDecl.Opt Identifier VarDeclSuffix.Opt .   (rule 55)

    $default	reduce using rule 55 (VarDeclaration)



state 159

    VarDeclSuffix.Opt  ->  VarDeclSuffix .   (rule 57)

    $default	reduce using rule 57 (VarDeclSuffix.Opt)



state 160

    VarDeclSuffix  ->  ArrayDeclList .   (rule 58)
    ArrayDeclList  ->  ArrayDeclList . ArrayDecl   (rule 69)

    '[' 	shift, and go to state 157

    $default	reduce using rule 58 (VarDeclSuffix)

    ArrayDecl	go to state 166



state 161

    ArrayDeclList  ->  ArrayDecl .   (rule 68)

    $default	reduce using rule 68 (ArrayDeclList)



state 162

    FunctionalType  ->  Type '(' PointerList ')' '(' ParamDeclList.Opt ')' .   (rule 88)

    $default	reduce using rule 88 (FunctionalType)



state 163

    VarDeclSuffix  ->  ':' LITERAL_INT .   (rule 59)

    $default	reduce using rule 59 (VarDeclSuffix)



state 164

    Size.Opt  ->  LITERAL_INT .   (rule 72)

    $default	reduce using rule 72 (Size.Opt)



state 165

    ArrayDecl  ->  '[' Size.Opt . ']'   (rule 70)

    ']' 	shift, and go to state 167



state 166

    ArrayDeclList  ->  ArrayDeclList ArrayDecl .   (rule 69)

    $default	reduce using rule 69 (ArrayDeclList)



state 167

    ArrayDecl  ->  '[' Size.Opt ']' .   (rule 70)

    $default	reduce using rule 70 (ArrayDecl)



state 168

    $   	go to state 169



state 169

    $default	accept
